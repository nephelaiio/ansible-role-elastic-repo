---
- name: Set package facts
  ansible.builtin.set_fact:
    _elastic_repo_url_els: "{{ elastic_repo_url | default(elastic_repo_url_default_els) }}"
    _elastic_repo_url_oss: "{{ elastic_repo_url | default(elastic_repo_url_default_oss) }}"

- name: Install apt repository
  when: ansible_os_family == "Debian"
  block:
    - name: Install package requirements
      ansible.builtin.package:
        name:
          - gnupg
          - apt-transport-https
          - python3-debian
        state: present

    - name: Set apt repository state
      ansible.builtin.set_fact:
        is_deb882: "{{ is_deb882_debian or is_deb882_ubuntu }}"
      vars:
        is_deb882_debian: "{{ (ansible_facts.distribution == 'Debian') and (ansible_facts.distribution_version is version('11', '>=')) }}"
        is_deb882_ubuntu: "{{ (ansible_facts.distribution == 'Ubuntu') and (ansible_facts.distribution_version is version('22.04', '>=')) }}"

    - name: Deploy legacy apt repository configuration
      when: not is_deb882
      block:
        - name: Install elastic apt repo key
          ansible.builtin.apt_key:
            url: "{{ elastic_repo_gpg_key }}"
            state: "{{ elastic_repo_state }}"

        - name: Install elastic apt repository (elastic license)
          ansible.builtin.apt_repository:
            repo: "{{ _elastic_repo_url_els[_distro] }}"
            filename: elastic
            state: "{{ elastic_repo_state }}"
          vars:
            _distro: "{{ ansible_os_family | lower }}"
          when: not elastic_repo_oss

        - name: Install elastic apt repository (oss license)
          ansible.builtin.apt_repository:
            repo: "{{ _elastic_repo_url_oss[_distro] }}"
            filename: elastic
            state: "{{ elastic_repo_state }}"
          vars:
            _distro: "{{ ansible_os_family | lower }}"
          when: elastic_repo_oss

    - name: Deploy deb882 repository configuration
      when: is_deb882
      block:
        - name: Install elastic apt repo (elastic license)
          ansible.builtin.deb822_repository:
            name: elastic
            uris: "{{ _deb | first }}"
            suites: "{{ _deb[-2] }}"
            components: "{{ _deb[-1] }}"
            signed_by: "{{ elastic_repo_gpg_key }}"
            state: present
            enabled: true
          vars:
            _distro: "{{ ansible_os_family | lower }}"
            _deb: "{{ _elastic_repo_url_els[_distro] | regex_replace('^deb ', '') | split }}"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

- name: Install yum repository
  when: ansible_os_family == 'RedHat'
  block:
    - name: Install elastic yum repo key
      ansible.builtin.rpm_key:
        key: "{{ elastic_repo_gpg_key }}"
        state: "{{ elastic_repo_state }}"

    - name: Install elastic yum repository (elastic license)
      ansible.builtin.yum_repository:
        name: elastic
        description: "Elastic package repository"
        baseurl: "{{ _elastic_repo_url_els[_distro] }}"
        enabled: true
        gpgcheck: true
        gpgkey: "{{ elastic_repo_gpg_key }}"
      vars:
        _distro: "{{ ansible_os_family | lower }}"
      when: not (elastic_repo_oss | bool)

    - name: Install elastic yum repository (oss license)
      ansible.builtin.yum_repository:
        name: elastic
        description: "Elastic package repository"
        baseurl: "{{ _elastic_repo_url_oss[_distro] }}"
        enabled: true
        gpgcheck: true
        gpgkey: "{{ elastic_repo_gpg_key }}"
      vars:
        _distro: "{{ ansible_os_family | lower }}"
      when: elastic_repo_oss | bool
